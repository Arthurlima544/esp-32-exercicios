[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/arthur/development/projects/fse/esp-32/wifi-example/build/bootloader/esp-idf/esptool_py && /Users/arthur/.espressif/python_env/idf5.4_py3.9_env/bin/python /Users/arthur/esp/v5.4.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/arthur/development/projects/fse/esp-32/wifi-example/build/bootloader/bootloader.bin
Bootloader binary size 0x6580 bytes. 0xa80 bytes (9%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/hello_world_main.c.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Building C object CMakeFiles/wifi-example.elf.dir/project_elf_src_esp32.c.obj
[8/10] Linking CXX executable wifi-example.elf
[9/10] Generating binary image from built executable
esptool.py v4.9.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/arthur/development/projects/fse/esp-32/wifi-example/build/wifi-example.bin
[10/10] cd /Users/arthur/development/projects/fse/esp-32/wifi-example/build/esp-idf/esptool_py && /Users/arthur/.espressif/python_env/idf5.4_py3.9_env/bin/python /Users/arthur/esp/v5.4.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/arthur/development/projects/fse/esp-32/wifi-example/build/partition_table/partition-table.bin /Users/arthur/development/projects/fse/esp-32/wifi-example/build/wifi-example.bin
wifi-example.bin binary size 0xb6d60 bytes. Smallest app partition is 0x100000 bytes. 0x492a0 bytes (29%) free.
