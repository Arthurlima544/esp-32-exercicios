[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/arthur/development/projects/fse/esp-32/low-power/build/bootloader/esp-idf/esptool_py && /Users/arthur/.espressif/python_env/idf5.4_py3.9_env/bin/python /Users/arthur/esp/v5.4.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/arthur/development/projects/fse/esp-32/low-power/build/bootloader/bootloader.bin
Bootloader binary size 0x6580 bytes. 0xa80 bytes (9%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/hello_world_main.c.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable low-power.elf
[8/10] Generating binary image from built executable
esptool.py v4.9.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/arthur/development/projects/fse/esp-32/low-power/build/low-power.bin
[9/10] cd /Users/arthur/development/projects/fse/esp-32/low-power/build/esp-idf/esptool_py && /Users/arthur/.espressif/python_env/idf5.4_py3.9_env/bin/python /Users/arthur/esp/v5.4.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/arthur/development/projects/fse/esp-32/low-power/build/partition_table/partition-table.bin /Users/arthur/development/projects/fse/esp-32/low-power/build/low-power.bin
low-power.bin binary size 0x2da00 bytes. Smallest app partition is 0x100000 bytes. 0xd2600 bytes (82%) free.
[9/10] cd /Users/arthur/esp/v5.4.1/esp-idf/components/esptool_py && /Users/arthur/.espressif/tools/cmake/3.30.2/CMake.app/Contents/bin/cmake -D IDF_PATH=/Users/arthur/esp/v5.4.1/esp-idf -D "SERIAL_TOOL=/Users/arthur/.espressif/python_env/idf5.4_py3.9_env/bin/python;;/Users/arthur/esp/v5.4.1/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/arthur/development/projects/fse/esp-32/low-power/build -P /Users/arthur/esp/v5.4.1/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/tty.usbserial-0001 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 low-power.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.9.0
Serial port /dev/tty.usbserial-0001
Connecting.....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: c0:49:ef:f9:00:84
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003dfff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 25984 bytes to 16385...
Writing at 0x00001000... (50 %)
Writing at 0x00007580... (100 %)
Wrote 25984 bytes (16385 compressed) at 0x00001000 in 0.8 seconds (effective 271.0 kbit/s)...
Hash of data verified.
Compressed 186880 bytes to 101776...
Writing at 0x00010000... (14 %)
Writing at 0x0001c7ba... (28 %)
Writing at 0x00022158... (42 %)
Writing at 0x00027e20... (57 %)
Writing at 0x0002f318... (71 %)
Writing at 0x0003621c... (85 %)
Writing at 0x0003c384... (100 %)
Wrote 186880 bytes (101776 compressed) at 0x00010000 in 2.8 seconds (effective 529.8 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 428.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
